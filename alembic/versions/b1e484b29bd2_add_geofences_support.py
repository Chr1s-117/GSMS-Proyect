"""add_geofences_support

Revision ID: b1e484b29bd2
Revises: 4f84e5c8808a
Create Date: 2025-10-18 08:06:11.390410

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from geoalchemy2 import Geography, Geometry
from sqlalchemy.dialects import postgresql
import geoalchemy2

# revision identifiers, used by Alembic.
revision: str = 'b1e484b29bd2'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    op.execute("CREATE EXTENSION IF NOT EXISTS postgis")
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('devices',
    sa.Column('DeviceID', sa.String(length=100), nullable=False),
    sa.Column('Name', sa.String(length=200), nullable=True),
    sa.Column('Description', sa.String(length=500), nullable=True),
    sa.Column('IsActive', sa.Boolean(), nullable=False),
    sa.Column('CreatedAt', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('LastSeen', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('DeviceID')
    )
    op.create_table('geofences',
    sa.Column('id', sa.String(length=100), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('geometry', geoalchemy2.types.Geography(geometry_type='POLYGON', srid=4326, from_text='ST_GeogFromText', name='geography', nullable=False), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('color', sa.String(length=7), nullable=True),
    sa.Column('metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('gps_data',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('DeviceID', sa.String(length=100), nullable=False),
    sa.Column('Latitude', sa.Float(), nullable=False),
    sa.Column('Longitude', sa.Float(), nullable=False),
    sa.Column('Altitude', sa.Float(), nullable=False),
    sa.Column('Accuracy', sa.Float(), nullable=False),
    sa.Column('Timestamp', sa.DateTime(timezone=True), nullable=False),
    sa.Column('CurrentGeofenceID', sa.String(length=100), nullable=True),
    sa.Column('CurrentGeofenceName', sa.String(length=200), nullable=True),
    sa.Column('GeofenceEventType', sa.String(length=10), nullable=True),
    sa.CheckConstraint('"GeofenceEventType" IN (\'entry\', \'exit\', \'inside\')', name='check_geofence_event_type'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_device_geofence', 'gps_data', ['DeviceID', 'CurrentGeofenceID'], unique=False)
    op.create_index('idx_device_id_asc', 'gps_data', ['DeviceID', sa.text('id ASC')], unique=False)
    op.create_index('idx_device_id_desc', 'gps_data', ['DeviceID', sa.text('id DESC')], unique=False)
    op.create_index('idx_device_timestamp', 'gps_data', ['DeviceID', 'Timestamp'], unique=False)
    op.create_index('idx_geofence_timestamp', 'gps_data', ['CurrentGeofenceID', 'Timestamp'], unique=False)
    op.create_index(op.f('ix_gps_data_CurrentGeofenceID'), 'gps_data', ['CurrentGeofenceID'], unique=False)
    op.create_index(op.f('ix_gps_data_DeviceID'), 'gps_data', ['DeviceID'], unique=False)
    op.create_index('unique_device_timestamp', 'gps_data', ['DeviceID', 'Timestamp'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('unique_device_timestamp', table_name='gps_data')
    op.drop_index(op.f('ix_gps_data_DeviceID'), table_name='gps_data')
    op.drop_index(op.f('ix_gps_data_CurrentGeofenceID'), table_name='gps_data')
    op.drop_index('idx_geofence_timestamp', table_name='gps_data')
    op.drop_index('idx_device_timestamp', table_name='gps_data')
    op.drop_index('idx_device_id_desc', table_name='gps_data')
    op.drop_index('idx_device_id_asc', table_name='gps_data')
    op.drop_index('idx_device_geofence', table_name='gps_data')
    op.drop_table('gps_data')
    # LÃ­nea eliminada: op.drop_index('idx_geofences_geometry'...)
    op.drop_table('geofences')
    op.drop_table('devices')
    # ### end Alembic commands ###
